// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model InvoicePayment {
  id                                Int                      @id @default(autoincrement())
  amount_paid                       Float?
  display_amount_paid               String?
  underpaid_amount                  Float?
  overpaid_amount                   Float?
  non_pay_pro_payment_received      Boolean?
  transaction_currency              String?
  universal_codes_payment_string    String?
  universal_codes_verification_link String?
  Invoice                           Invoice?
  payment_curenncies                InvoicePaymentCurrency[]
}

model InvoicePaymentCurrency {
  id                                                         Int                                                 @id @default(autoincrement())
  InvoicePayment                                             InvoicePayment?                                     @relation(fields: [invoice_payment_id], references: [id])
  invoice_payment_id                                         Int?
  currency_code                                              String?
  total                                                      Float?
  subtotal                                                   Float?
  display_total                                              String?
  display_subtotal                                           String?
  currency_codes                                             InvoicePaymentCurrencyCode[]
  exchange_rates                                             InvoicePaymentCurrencyExchangeRate[]
  miner_fee                                                  InvoicePyamentCurrencyMinerFee?                     @relation(fields: [invoice_pyament_currency_miner_fee_id], references: [id])
  invoice_pyament_currency_miner_fee_id                      Int?                                                @unique
  supported_transaction_currency                             InvoicePaymentCurrencySupportedTransactionCurrency? @relation(fields: [invoice_payment_currency_supported_transaction_currency_id], references: [id])
  invoice_payment_currency_supported_transaction_currency_id Int?                                                @unique
}

model InvoicePaymentCurrencyCode {
  id                          Int                     @id @default(autoincrement())
  code                        String?
  code_url                    String?
  InvoicePaymentCurrency      InvoicePaymentCurrency? @relation(fields: [invoice_payment_currency_id], references: [id])
  invoice_payment_currency_id Int?
}

model InvoicePaymentCurrencyExchangeRate {
  id                          Int                     @id @default(autoincrement())
  currency_code               String
  rate                        Float?
  InvoicePaymentCurrency      InvoicePaymentCurrency? @relation(fields: [invoice_payment_currency_id], references: [id])
  invoice_payment_currency_id Int?
}

model InvoicePyamentCurrencyMinerFee {
  id                     Int                     @id @default(autoincrement())
  satoshis_per_byte      Float?
  total_fee              Float?
  fiat_amount            Float?
  InvoicePaymentCurrency InvoicePaymentCurrency?
}

model InvoicePaymentCurrencySupportedTransactionCurrency {
  id                     Int                     @id @default(autoincrement())
  enabled                Boolean?
  reason                 String?
  InvoicePaymentCurrency InvoicePaymentCurrency?
}

model InvoiceBuyerProvidedInfo {
  id                            Int           @id @default(autoincrement())
  name                          String?
  phone_number                  String?
  selected_wallet               String?
  email_address                 String?
  selected_transaction_currency String?
  sms                           String?
  sms_verified                  String?
  InvoiceBuyer                  InvoiceBuyer?
}

model InvoiceBuyer {
  id                             Int                       @id @default(autoincrement())
  name                           String?
  address1                       String?
  address2                       String?
  city                           String?
  region                         String?
  postal_code                    String?
  country                        String?
  email                          String?
  phone                          String?
  notify                         Boolean?
  buyer_provided_email           String?
  invoice_buyer_provided_info    InvoiceBuyerProvidedInfo? @relation(fields: [invoice_buyer_provided_info_id], references: [id])
  invoice_buyer_provided_info_id Int?                      @unique
  Invoice                        Invoice?
}

model Invoice {
  id                    Int             @id @default(autoincrement())
  pos_data_json         String?
  price                 Float?
  status                String?
  currency_code         String?
  token                 String?
  bitpay_id             String?
  bitpay_order_id       String?
  bitpay_guid           String?
  bitpay_url            String?
  merchant_name         String?
  created_date          DateTime?
  expiration_time       DateTime?
  transaction_speed     String?
  json_pay_pro_required Boolean?
  item_description      String?
  low_fee_detected      Boolean?
  invoice_payment       InvoicePayment? @relation(fields: [invoice_payment_id], references: [id])
  invoice_payment_id    Int?            @unique
  invoice_buyer         InvoiceBuyer?   @relation(fields: [invoice_buyer_id], references: [id])
  invoice_buyer_id      Int?            @unique
}
